Description: >
  This template deploys an ECS cluster to the provided VPC and subnets
  using an Auto Scaling Group

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  Environment:
    Type: String
    Default: dev

  InstanceType:
    Description: Which instance type should we use to build the ECS cluster?
    Type: String
    Default: c4.large

  ClusterSize:
    Description: How many ECS hosts do you want to initially deploy?
    Type: Number
    Default: 4

  Subnets:
    Description: Choose which subnets this ECS cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  KeyName:
    Description: The KeyName used to allow access to the EC2 Instances
    Type: String

  SecurityGroups:
    Description: Select the Security Group to use for the ECS cluster hosts
    Type: List<AWS::EC2::SecurityGroup::Id>

  ECSAMI:
    Description: ECS-Optimized AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: ami-0b69ea66ff7391e80
    #Default: ami-0b69ea66ff7391e80

  SNSTopic:
    Description: Provide the name of SNS Topic to which notifications to be sent
    Type: String
    Default: '' 
  TemplateS3Region:
    Type: String
  TemplateS3Location:
    Type: String
  ECSInstanceProfile:
    Description: IAM Instance Profile to be attached to the ECS Host
    Type: String

    

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref EnvironmentName

  ECSAutoScalingGroup:
    DependsOn: ECSCluster
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref ECSLaunchConfiguration
      MinSize: !Ref ClusterSize
      MaxSize: !Ref ClusterSize
      DesiredCapacity: !Ref ClusterSize
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} ECS host
          PropagateAtLaunch: true
 #   CreationPolicy:
 #     ResourceSignal:
 #       Timeout: PT5M
 #   UpdatePolicy:
 #     AutoScalingRollingUpdate:
 #       MinInstancesInService: 1
 #       MaxBatchSize: 1
 #       PauseTime: PT5M
 #       SuspendProcesses:
 #         - HealthCheck
 #         - ReplaceUnhealthy
 #         - AZRebalance
 #         - AlarmNotification
 #         - ScheduledActions
 #       WaitOnResourceSignals: true

  ECSLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref ECSAMI
      InstanceType: !Ref InstanceType
      SecurityGroups: !Ref SecurityGroups
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref ECSInstanceProfile
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash
          yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
          yum install -y https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
          yum install -y aws-cfn-bootstrap hibagent
          /usr/bin/enable-ec2-spot-hibernation
          curl -O https://bootstrap.pypa.io/get-pip.py
          python get-pip.py
          /usr/bin/pip install --upgrade pip

    
  ECSCloudWatchAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateS3Region}.amazonaws.com/${TemplateS3Location}/infrastructure/cloudwatch-alarms-ecs.cfn.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ClusterName: !Ref ECSCluster
        SnsTopicName: !Ref SNSTopic  
Outputs:
  Cluster:
    Description: A reference to the ECS cluster
    Value: !Ref ECSCluster

  ECSAutoScalingGroupName:
    Description: A reference to ECS AutoScaling Group Name
    Value: !Ref ECSAutoScalingGroup
